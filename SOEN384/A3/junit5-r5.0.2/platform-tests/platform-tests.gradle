apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
	filters {
		engines {
			include 'junit-jupiter'
		}
		includeClassNamePattern '.*Tests?'
	}
	logManager 'org.apache.logging.log4j.jul.LogManager'
}

// Tests in `AutomaticModuleNameTests` depend on all and the three jars. #894
junitPlatformTest.dependsOn(
	project(':junit-jupiter-migrationsupport').jar,
	project(':junit-platform-gradle-plugin').jar,
	project(':junit-platform-surefire-provider').jar
)

dependencies {
	// --- Things we are testing --------------------------------------------------
	testImplementation(project(':junit-platform-commons'))
	testImplementation(project(path: ':junit-platform-console', configuration: 'shadow'))
	testImplementation(project(':junit-platform-engine'))
	testImplementation(project(':junit-platform-launcher'))

	// --- Things we are testing with ---------------------------------------------
	testImplementation(project(':junit-jupiter-api'))
	testImplementation(project(':junit-jupiter-params'))
	testImplementation(project(':junit-platform-runner'))
	testImplementation(project(path: ':junit-platform-engine', configuration: 'testArtifacts'))
	testImplementation("org.apiguardian:apiguardian-api:${apiGuardianVersion}")
	testImplementation("org.assertj:assertj-core:${assertJVersion}")
	testImplementation("org.mockito:mockito-core:${mockitoVersion}")
	testImplementation("io.github.lukehutch:fast-classpath-scanner:2.4.7")

	// --- Test run-time dependencies ---------------------------------------------
	testRuntimeOnly(project(':junit-jupiter-engine'))
	testRuntimeOnly(project(':junit-vintage-engine'))
	testRuntimeOnly(project(':junit-jupiter-migrationsupport')) // included for @API report
	testRuntimeOnly(project(':junit-platform-gradle-plugin')) // included for @API report
	testRuntimeOnly(project(':junit-platform-surefire-provider')) // included for @API report
	testRuntimeOnly("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	testRuntimeOnly("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}
