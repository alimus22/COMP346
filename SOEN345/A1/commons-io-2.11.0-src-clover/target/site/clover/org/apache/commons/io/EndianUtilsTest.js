var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":316,"id":10517,"methods":[{"el":38,"sc":5,"sl":34},{"el":49,"sc":5,"sl":40},{"el":57,"sc":5,"sl":51},{"el":68,"sc":5,"sl":59},{"el":76,"sc":5,"sl":70},{"el":84,"sc":5,"sl":78},{"el":92,"sc":5,"sl":86},{"el":107,"sc":5,"sl":98},{"el":116,"sc":5,"sl":109},{"el":130,"sc":5,"sl":118},{"el":139,"sc":5,"sl":132},{"el":148,"sc":5,"sl":141},{"el":166,"sc":5,"sl":150},{"el":175,"sc":5,"sl":168},{"el":184,"sc":5,"sl":177},{"el":210,"sc":5,"sl":186},{"el":221,"sc":5,"sl":212},{"el":240,"sc":5,"sl":223},{"el":251,"sc":5,"sl":242},{"el":278,"sc":5,"sl":253},{"el":300,"sc":5,"sl":281},{"el":314,"sc":5,"sl":303}],"name":"EndianUtilsTest","sl":32}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_10":{"methods":[{"sl":59}],"name":"testSwapInteger","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":65},{"sl":66},{"sl":67}]},"test_1060":{"methods":[{"sl":98}],"name":"testSymmetry","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":106}]},"test_1101":{"methods":[{"sl":223}],"name":"testWriteSwappedFloat","pass":true,"statements":[{"sl":225},{"sl":226},{"sl":227},{"sl":228},{"sl":229},{"sl":230},{"sl":231},{"sl":233},{"sl":234},{"sl":235},{"sl":236},{"sl":237},{"sl":238},{"sl":239}]},"test_1219":{"methods":[{"sl":86}],"name":"testSwapDouble","pass":true,"statements":[{"sl":88},{"sl":89},{"sl":90},{"sl":91}]},"test_1321":{"methods":[{"sl":141}],"name":"testReadSwappedInteger","pass":true,"statements":[{"sl":143},{"sl":144},{"sl":146},{"sl":147}]},"test_1403":{"methods":[{"sl":34}],"name":"testCtor","pass":true,"statements":[{"sl":36}]},"test_1439":{"methods":[{"sl":40}],"name":"testEOFException","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":44}]},"test_1685":{"methods":[{"sl":132}],"name":"testReadSwappedUnsignedShort","pass":true,"statements":[{"sl":134},{"sl":135},{"sl":137},{"sl":138}]},"test_1690":{"methods":[{"sl":186}],"name":"testWriteSwappedLong","pass":true,"statements":[{"sl":188},{"sl":189},{"sl":190},{"sl":191},{"sl":192},{"sl":193},{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":199},{"sl":200},{"sl":201},{"sl":202},{"sl":203},{"sl":204},{"sl":205},{"sl":206},{"sl":207},{"sl":208},{"sl":209}]},"test_1736":{"methods":[{"sl":51}],"name":"testSwapShort","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":55},{"sl":56}]},"test_1844":{"methods":[{"sl":109}],"name":"testReadSwappedShort","pass":true,"statements":[{"sl":111},{"sl":112},{"sl":114},{"sl":115}]},"test_187":{"methods":[{"sl":281}],"name":"testSymmetryOfLong","pass":true,"statements":[{"sl":284},{"sl":285},{"sl":288},{"sl":289},{"sl":290},{"sl":291},{"sl":292},{"sl":295},{"sl":296},{"sl":297},{"sl":298}]},"test_368":{"methods":[{"sl":212}],"name":"testReadSwappedFloat","pass":true,"statements":[{"sl":214},{"sl":215},{"sl":216},{"sl":217},{"sl":219},{"sl":220}]},"test_501":{"methods":[{"sl":78}],"name":"testSwapFloat","pass":true,"statements":[{"sl":80},{"sl":81},{"sl":82},{"sl":83}]},"test_536":{"methods":[{"sl":168}],"name":"testReadSwappedUnsignedInteger","pass":true,"statements":[{"sl":170},{"sl":171},{"sl":173},{"sl":174}]},"test_583":{"methods":[{"sl":253}],"name":"testWriteSwappedDouble","pass":true,"statements":[{"sl":255},{"sl":256},{"sl":257},{"sl":258},{"sl":259},{"sl":260},{"sl":261},{"sl":262},{"sl":263},{"sl":264},{"sl":265},{"sl":267},{"sl":268},{"sl":269},{"sl":270},{"sl":271},{"sl":272},{"sl":273},{"sl":274},{"sl":275},{"sl":276},{"sl":277}]},"test_618":{"methods":[{"sl":303}],"name":"testUnsignedOverrun","pass":true,"statements":[{"sl":305},{"sl":306},{"sl":308},{"sl":309},{"sl":311},{"sl":312},{"sl":313}]},"test_687":{"methods":[{"sl":242}],"name":"testReadSwappedDouble","pass":true,"statements":[{"sl":244},{"sl":245},{"sl":246},{"sl":247},{"sl":249},{"sl":250}]},"test_79":{"methods":[{"sl":177}],"name":"testReadSwappedLong","pass":true,"statements":[{"sl":179},{"sl":180},{"sl":182},{"sl":183}]},"test_801":{"methods":[{"sl":70}],"name":"testSwapLong","pass":true,"statements":[{"sl":72},{"sl":73},{"sl":74},{"sl":75}]},"test_894":{"methods":[{"sl":118}],"name":"testWriteSwappedShort","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":122},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129}]},"test_985":{"methods":[{"sl":150}],"name":"testWriteSwappedInteger","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1403], [], [1403], [], [], [], [1439], [], [1439], [1439], [1439], [], [], [], [], [], [], [1736], [], [1736], [1736], [1736], [1736], [], [], [10], [], [10], [10], [10], [10], [10], [10], [10], [], [], [801], [], [801], [801], [801], [801], [], [], [501], [], [501], [501], [501], [501], [], [], [1219], [], [1219], [1219], [1219], [1219], [], [], [], [], [], [], [1060], [], [1060], [1060], [1060], [1060], [1060], [1060], [1060], [], [], [1844], [], [1844], [1844], [], [1844], [1844], [], [], [894], [], [894], [894], [894], [894], [], [894], [894], [894], [894], [894], [], [], [1685], [], [1685], [1685], [], [1685], [1685], [], [], [1321], [], [1321], [1321], [], [1321], [1321], [], [], [985], [], [985], [985], [985], [985], [985], [985], [], [985], [985], [985], [985], [985], [985], [985], [], [], [536], [], [536], [536], [], [536], [536], [], [], [79], [], [79], [79], [], [79], [79], [], [], [1690], [], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [1690], [], [], [368], [], [368], [368], [368], [368], [], [368], [368], [], [], [1101], [], [1101], [1101], [1101], [1101], [1101], [1101], [1101], [], [1101], [1101], [1101], [1101], [1101], [1101], [1101], [], [], [687], [], [687], [687], [687], [687], [], [687], [687], [], [], [583], [], [583], [583], [583], [583], [583], [583], [583], [583], [583], [583], [583], [], [583], [583], [583], [583], [583], [583], [583], [583], [583], [583], [583], [], [], [], [187], [], [], [187], [187], [], [], [187], [187], [187], [187], [187], [], [], [187], [187], [187], [187], [], [], [], [], [618], [], [618], [618], [], [618], [618], [], [618], [618], [618], [], [], []]
